// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CardsColumns holds the columns for the "cards" table.
	CardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "imei", Type: field.TypeString},
		{Name: "os_version", Type: field.TypeString},
		{Name: "os_type", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// CardsTable holds the schema information for the "cards" table.
	CardsTable = &schema.Table{
		Name:       "cards",
		Columns:    CardsColumns,
		PrimaryKey: []*schema.Column{CardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cards_users_card",
				Columns:    []*schema.Column{CardsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeInt64},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "account", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserGroupColumns holds the columns for the "user_group" table.
	UserGroupColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt64},
		{Name: "gid", Type: field.TypeInt64},
	}
	// UserGroupTable holds the schema information for the "user_group" table.
	UserGroupTable = &schema.Table{
		Name:       "user_group",
		Columns:    UserGroupColumns,
		PrimaryKey: []*schema.Column{UserGroupColumns[0], UserGroupColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_group_uid",
				Columns:    []*schema.Column{UserGroupColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_group_gid",
				Columns:    []*schema.Column{UserGroupColumns[1]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CardsTable,
		GroupsTable,
		UsersTable,
		UserGroupTable,
	}
)

func init() {
	CardsTable.ForeignKeys[0].RefTable = UsersTable
	UserGroupTable.ForeignKeys[0].RefTable = UsersTable
	UserGroupTable.ForeignKeys[1].RefTable = GroupsTable
}
